{"version":3,"sources":["components/Header.js","components/food1.jpg","components/Recipes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","class","CreatePriscriptionScreen","useState","medicines","setMedicines","medicine","setMedicine","dosage","setDosage","carbohydrates","setCarbohydrates","fats","setFats","calories","setCalories","onClick","document","getElementById","style","display","id","type","placeholder","value","onChange","e","target","prev","med","map","medic","index","src","food1","arr","newArr","i","length","push","deleteNote","App","Recipes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5b656ace.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction Header(){\r\n   return (\r\n    <div className=\"jumbotron\">\r\n   \r\n    <h1 className=\"display-1\">Feeling Hungry ? Make a dish</h1>\r\n    <div class=\"input-group w-50 mx-auto my-5\">\r\n  {/* <input type=\"text\" className=\"form-control\" placeholder=\"Search for a recipe\" /> */}\r\n  {/* <div class=\"input-group-append mx-auto\">\r\n  <h1>Continue as</h1>\r\n    \r\n  \r\n  \r\n  \r\n  </div> */}\r\n</div>\r\n    </div>\r\n    );\r\n}\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/food1.92e747ca.jpg\";","import React, { useEffect, useState } from 'react';\r\n// import { Form, Container, Button } from 'react-bootstrap';\r\n// import { useReactToPrint } from 'react-to-print';\r\n//from '../actions/appointmentActions';\r\nimport food1 from \"./food1.jpg\";\r\nconst CreatePriscriptionScreen = () => {\r\n//   const a_id = match.params.id;\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [medicine, setMedicine] = useState('');\r\n  const [dosage, setDosage] = useState();\r\n  const [carbohydrates,setCarbohydrates] = useState();\r\n  const [fats,setFats] = useState();\r\n  const [calories,setCalories] = useState();\r\n  const [isadmin,setAdmin] = useState();\r\n//   const dispatch = useDispatch();\r\n//   const { success } = appointmentCompleted;\r\n\r\n//   useEffect(() => {\r\n//     dispatch(listAppointmentDetails(a_id));\r\n//     if (success) {\r\n//       history.push(`/appointment/${a_id}`);\r\n//     }\r\n//   }, [doctorInfo, history, dispatch, a_id, success]);\r\n\r\n//   const componentRef = useRef();\r\n//   const handlePrint = useReactToPrint({\r\n//     content: () => componentRef.current,\r\n//   });\r\n\r\n  const addMed = () => {\r\n    setMedicines((prev) => {\r\n      return [...prev, { med: medicine, dosage: dosage,carbohydrates:carbohydrates,fats:fats,calories:calories }];\r\n    });\r\n    setMedicine('');\r\n    setDosage('');\r\n    setCarbohydrates('');\r\n    setFats('');\r\n    setCalories('');\r\n  };\r\n\r\n  function deleteNote(id) {\r\n    var arr = medicines;\r\n    var newArr = [];\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (i !== id) {\r\n        newArr.push(arr[i]);\r\n      }\r\n    }\r\n\r\n    // setMedicines((prev) => {\r\n    //   prev.filter((item) => {\r\n    //     return item.id !== id;\r\n    //   });\r\n    // });\r\n    setMedicines(newArr);\r\n  }\r\n     function her(){\r\n      // document.getElementById(\"yash1\").style.display = \"inline-flex\";\r\n       document.getElementById(\"newdish\").style.display = \"inline-flex\";\r\n       document.getElementById(\"rambo1\").style.display = \"inline-flex\";\r\n       document.getElementById(\"rambo2\").style.display = \"inline-flex\";\r\n    // }\r\n  }\r\n   function her2(){\r\n  // document.getElementById(\"newdish\").style.display = \"none\";\r\n  document.getElementById(\"newdish\").style.display = \"none\";\r\n  document.getElementById(\"rambo1\").style.display = \"none\";\r\n  document.getElementById(\"rambo2\").style.display = \"none\";\r\n  // }\r\n}\r\n  return (\r\n    <div className=\"yash2\">\r\n    <div className=\"jmd\">\r\n    <div className=\"jumbotron2\">\r\n    <h1 className=\"py-5\">Continue As</h1>\r\n    <button className=\"btn btn-dark\" onClick={her}>Admin</button> <t></t><t></t><t></t>\r\n<button className=\"btn btn-dark\" onClick={her2}>User</button>\r\n</div>\r\n       <h1 className=\"text-center py-3\" id=\"yash1\">Enjoy a Dish</h1> \r\n      <div className=\"row shadow-lg p-3 mb-5 bg-black rounded\" id=\"newdish\">\r\n      \r\n        <div className=\"col-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Dish Name\"\r\n            value={medicine}\r\n            onChange={(e) => setMedicine(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Proteins\"\r\n            value={carbohydrates}\r\n            onChange={(e) => setCarbohydrates(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Carbohydrates\"\r\n            value={fats}\r\n            onChange={(e) => setFats(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Fats\"\r\n            value={calories}\r\n            onChange={(e) => setCalories(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Calories\"\r\n            value={dosage}\r\n            onChange={(e) => setDosage(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <div className=\"\">\r\n            <button className=\"btn btn-secondary\" onClick={addMed}>\r\n              Add to the list\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-1 mb-5\">\r\n      \r\n        {medicines.map((medic, index) => (\r\n          <div\r\n            key={index}\r\n            id={index}\r\n            className=\"x1\"\r\n          >\r\n          {/* <div className=\"jmd2\">\r\n            <img src=\"https://www.pexels.com/photo/pepperoni-pizza-with-basil-leaves-1260968/\"></img>\r\n            </div> */}\r\n              <img src={food1} className=\"img1\"></img>\r\n              <div className=\"jmd3 p-3 rounded d-flex justify-content-around align-items-center\">\r\n            <div>Dish Name</div>\r\n            <div>Proteins</div>\r\n            <div>Carbohydrates</div>\r\n            <div>Fats</div>\r\n            <div>Calories</div>\r\n            <div id=\"rambo2\">More</div>\r\n\r\n\r\n            </div> \r\n            <div className=\"line1 shadow-lg p-3 mb-2 rounded d-flex justify-content-around align-items-center\">\r\n            <div>{medic.med}</div>\r\n            <div>{medic.carbohydrates}</div>\r\n            <div>{medic.fats}</div>\r\n            <div>{medic.calories}</div>\r\n            <div>{medic.dosage}</div>\r\n\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => deleteNote(index)} \r\n              id=\"rambo1\"\r\n            >\r\n              Delete\r\n            </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {medicines.length > 0 && (\r\n        <div className=\"d-md-flex justify-content-center align-items-center\">\r\n        </div>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePriscriptionScreen;","import React from \"react\";\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Recipes from \"./components/Recipes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      <Header/>\n      \n      <Recipes/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}